class CustomerNotFoundException extends RuntimeException
{
    CustomerNotFoundException()
    {
        super();
    }
}

class Customer
{
    private int userId;
    private String email;
    private String password;
    private String firstName;
     private String lastName;
    private String city;
    private String gender;
    private long phoneNumber;
    private Address address;
   
    
    Customer()
    {
        
    }
    Customer(int userId,String email,String password,String firstName,String lastName,
    String city,String gender,long phoneNumber,Address address)
    {
        this.userId=userId;
        this.email=email;
        this.password=password;
        this.firstName=firstName;
        this.lastName=lastName;
        this.city=city;
        this.gender=gender;
        this.phoneNumber=phoneNumber;
        this.address=address;
        
    }
    public int getUserId()
    {
        return this.userId;
    }
    public String getEmail()
    {
        return this.email;
    }
    public String getPassword()
    {
        return this.password;
    }
    public String getFirstName()
    {
        return this.firstName;
    }
    public String getCity()
    {
        return this.city;
    }
    public String getGender()
    {
        return this.gender;
    }
    public long getPhoneNumber()
    {
        return this.phoneNumber;
    }
    public Address getAddress()
    {
        return this.address;
    }
    public String getLastName()
    {
        return this.lastName;
    }
    public void setUserId(int userid)
    {
        this.userId=userid;
    }
    public void setEmail(String a)
    {
        this.email=a;
    }
    public void setPassword(String a)
    {
        this.password=a;
    }
    public void setFirstName(String a)
    {
        this.firstName=a;
    }
    public void setCity(String a)
    {
        this.city=a;
    }
    public void setGender(String a)
    {
        this.gender=a;
    }
    public void setPhoneNumber(long a)
    {
        this.phoneNumber=a;
    }
    public void setAddress(Address a)
    {
        this.address=a;
    }
    public void setLastName(String a)
    {
        this.lastName=a;
    }
    @Override
    public String toString()
    {
        return String.format("Customer [userId=%d, emailId=%s, password=%s, firstname=%s, lastName=%s, city=%s, gender=%s, phoneNumber=%d, address=%s]",
        userId,email,password,firstName,lastName,city,gender,phoneNumber,address);
    }
}
class Address
{
    private String city;
    private String state;
    private int zip;
    private String country;
    Address()
    {
        
    }
    Address(String city,String state,int zip,String country)
    {
        this.city=city;
        this.state=state;
        this.zip=zip;
        this.country=country;
    }
    public String getCity()
    {
        return this.city;
    }
    public String getState()
    {
        return this.state;
    }
    public int getZip()
    {
        return this.zip;
    }
    public String getCountry()
    {
        return this.country;
    }
    
    public void setCity(String a)
    {
        this.city=a;
    }
    public void setState(String a)
    {
        this.state=a;
    }
    public void setZip(int zipno)
    {
        this.zip=zipno;
    }
    public void setCountry(String a)
    {
        this.country=a;
    }
    
    @Override
    public String toString()
    {
        return String.format("Address[city=%s, state=%s, zip=%d, country=%s]",city,state,zip,country);
    }
}
interface CustomerService
{
    void createCustomer(Customer customer);
	Customer updateCustomer(Customer customer);
	void deleteCustomer(int id);
	Customer searchCustomer(int id);
	Customer[] getCustomers();
}
class CustomerServiceImpl implements CustomerService
{
    public static Customer customerArray[]=new Customer[5];
    public static int count=0;
    
    @Override
    public void createCustomer(Customer customer)
    {
        customerArray[count++]=customer;
    }
    @Override
    public Customer updateCustomer(Customer customer) throws CustomerNotFoundException
    {
        for(int i=0;i<5;i++)
        {
            if(customer.getUserId()==customerArray[i].getUserId())
            {
                customerArray[i]=customer;
                return customerArray[i];
            }
        }
        throw new CustomerNotFoundException();
    }
    @Override
    public void deleteCustomer(int id) throws CustomerNotFoundException
    {
        for(int i=0;i<5;i++)
        {
            if(customerArray[i].getUserId()==id)
            {
                customerArray[i]=null;
            }
        }
        throw new CustomerNotFoundException();
    }
    @Override
    public Customer searchCustomer(int id)
    {
        for(int i=0;i<5;i++)
        {
            if(customerArray[i].getUserId()==id)
            {
                return customerArray[i];
            }
        }
        throw new CustomerNotFoundException();
    }
    @Override
    public Customer[] getCustomers()
    {
        return customerArray;
    }
}